/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package io.jetprocess.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Draft service. Represents a row in the &quot;JP_Draft&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>io.jetprocess.model.impl.DraftModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>io.jetprocess.model.impl.DraftImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Draft
 * @generated
 */
@ProviderType
public interface DraftModel
	extends BaseModel<Draft>, GroupedModel, ShardedModel, StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a draft model instance should use the {@link Draft} interface instead.
	 */

	/**
	 * Returns the primary key of this draft.
	 *
	 * @return the primary key of this draft
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this draft.
	 *
	 * @param primaryKey the primary key of this draft
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this draft.
	 *
	 * @return the uuid of this draft
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this draft.
	 *
	 * @param uuid the uuid of this draft
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this draft.
	 *
	 * @return the ID of this draft
	 */
	public long getId();

	/**
	 * Sets the ID of this draft.
	 *
	 * @param id the ID of this draft
	 */
	public void setId(long id);

	/**
	 * Returns the group ID of this draft.
	 *
	 * @return the group ID of this draft
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this draft.
	 *
	 * @param groupId the group ID of this draft
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this draft.
	 *
	 * @return the company ID of this draft
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this draft.
	 *
	 * @param companyId the company ID of this draft
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this draft.
	 *
	 * @return the user ID of this draft
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this draft.
	 *
	 * @param userId the user ID of this draft
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this draft.
	 *
	 * @return the user uuid of this draft
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this draft.
	 *
	 * @param userUuid the user uuid of this draft
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this draft.
	 *
	 * @return the user name of this draft
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this draft.
	 *
	 * @param userName the user name of this draft
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this draft.
	 *
	 * @return the create date of this draft
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this draft.
	 *
	 * @param createDate the create date of this draft
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this draft.
	 *
	 * @return the modified date of this draft
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this draft.
	 *
	 * @param modifiedDate the modified date of this draft
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the draft no of this draft.
	 *
	 * @return the draft no of this draft
	 */
	@AutoEscape
	public String getDraftNo();

	/**
	 * Sets the draft no of this draft.
	 *
	 * @param draftNo the draft no of this draft
	 */
	public void setDraftNo(String draftNo);

	/**
	 * Returns the nature of this draft.
	 *
	 * @return the nature of this draft
	 */
	@AutoEscape
	public String getNature();

	/**
	 * Sets the nature of this draft.
	 *
	 * @param nature the nature of this draft
	 */
	public void setNature(String nature);

	/**
	 * Returns the receipt ID of this draft.
	 *
	 * @return the receipt ID of this draft
	 */
	public long getReceiptId();

	/**
	 * Sets the receipt ID of this draft.
	 *
	 * @param receiptId the receipt ID of this draft
	 */
	public void setReceiptId(long receiptId);

	/**
	 * Returns the reply type ID of this draft.
	 *
	 * @return the reply type ID of this draft
	 */
	public long getReplyTypeId();

	/**
	 * Sets the reply type ID of this draft.
	 *
	 * @param replyTypeId the reply type ID of this draft
	 */
	public void setReplyTypeId(long replyTypeId);

	/**
	 * Returns the category ID of this draft.
	 *
	 * @return the category ID of this draft
	 */
	public long getCategoryId();

	/**
	 * Sets the category ID of this draft.
	 *
	 * @param categoryId the category ID of this draft
	 */
	public void setCategoryId(long categoryId);

	/**
	 * Returns the subject of this draft.
	 *
	 * @return the subject of this draft
	 */
	@AutoEscape
	public String getSubject();

	/**
	 * Sets the subject of this draft.
	 *
	 * @param subject the subject of this draft
	 */
	public void setSubject(String subject);

	/**
	 * Returns the content of this draft.
	 *
	 * @return the content of this draft
	 */
	@AutoEscape
	public String getContent();

	/**
	 * Sets the content of this draft.
	 *
	 * @param content the content of this draft
	 */
	public void setContent(String content);

	/**
	 * Returns the dispatch of this draft.
	 *
	 * @return the dispatch of this draft
	 */
	public boolean getDispatch();

	/**
	 * Returns <code>true</code> if this draft is dispatch.
	 *
	 * @return <code>true</code> if this draft is dispatch; <code>false</code> otherwise
	 */
	public boolean isDispatch();

	/**
	 * Sets whether this draft is dispatch.
	 *
	 * @param dispatch the dispatch of this draft
	 */
	public void setDispatch(boolean dispatch);

	/**
	 * Returns the status of this draft.
	 *
	 * @return the status of this draft
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this draft.
	 *
	 * @param status the status of this draft
	 */
	public void setStatus(String status);

	/**
	 * Returns the approved by of this draft.
	 *
	 * @return the approved by of this draft
	 */
	@AutoEscape
	public String getApprovedBy();

	/**
	 * Sets the approved by of this draft.
	 *
	 * @param approvedBy the approved by of this draft
	 */
	public void setApprovedBy(String approvedBy);

	@Override
	public Draft cloneWithOriginalValues();

}